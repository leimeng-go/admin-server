syntax = "v1"

info (
	title:   "Admin Backend API"
	desc:    "后台管理系统 API"
	author:  "author"
	email:   "your-email@example.com"
	version: "v1.0"
	// swagger 相关
	basePath: "/api/v1"
	host:     "localhost:8888"
	schemes:  "http,https"
	consumes: "application/json"
	produces: "application/json"
)

type (
	RegisterReq {
		// 用户名
		Username string `json:"username" validate:"required" doc:"用户名，必填"`
		// 邮箱
		Email string `json:"email" validate:"required,email" doc:"邮箱地址，必填且格式正确"`
		// 密码
		Password string `json:"password" validate:"required,min=6" doc:"密码，至少6位"`
		// 确认密码
		ConfirmPassword string `json:"confirmPassword" validate:"required,eqfield=Password" doc:"确认密码，必须与密码相同"`
		// 验证码
		VerifyCode string `json:"verifyCode" validate:"required,len=6" doc:"6位数字验证码"`
		// 昵称
		Nickname string `json:"nickname" validate:"required" doc:"用户昵称"`
	}
	SendVerifyCodeReq {
		// 邮箱
		Email string `json:"email" validate:"required,email" doc:"邮箱地址，必填且格式正确"`
	}
	LoginReq {
		// 用户名
		Username string `json:"username" validate:"required" doc:"用户名，必填"`
		// 密码
		Password string `json:"password" validate:"required" doc:"密码，必填"`
	}
	LoginResp  {}
	CommonResp {
		// 状态码
		Code int64 `json:"code" doc:"状态码"`
		// 消息
		Message string `json:"message" doc:"消息"`
		// 数据
		Data interface{} `json:"data" doc:"数据"`
		// 凭证
		Token string `json:"token" doc:"凭证"`
	}
	UserInfo {
		// 用户ID
		Id int64 `json:"id" doc:"用户ID"`
		// 用户名
		Username string `json:"username" doc:"用户名"`
		// 昵称
		Nickname string `json:"nickname" doc:"用户昵称"`
		// 头像
		Avatar string `json:"avatar" doc:"用户头像URL"`
		// 角色
		Role string `json:"role" doc:"用户角色：admin或user"`
	}
	CreateUserReq {
		// 用户名
		Username string `json:"username" validate:"required" doc:"用户名，必填"`
		// 密码
		Password string `json:"password" validate:"required" doc:"密码，必填"`
		// 昵称
		Nickname string `json:"nickname" validate:"required" doc:"用户昵称，必填"`
		// 角色
		Role string `json:"role" validate:"required,oneof=admin user" doc:"用户角色，必须是admin或user"`
	}
	UpdateUserReq {
		// 用户ID
		Id int64 `json:"id" validate:"required" doc:"用户ID，必填"`
		// 昵称
		Nickname string `json:"nickname,optional" doc:"用户昵称，选填"`
		// 头像
		Avatar string `json:"avatar,optional" doc:"用户头像URL，选填"`
		// 角色
		Role string `json:"role,optional" validate:"omitempty,oneof=admin user" doc:"用户角色，选填，必须是admin或user"`
	}
	UserListReq {
		// 页码
		Page int64 `form:"page,default=1" validate:"required,min=1" doc:"页码，从1开始"`
		// 每页数量
		PageSize int64 `form:"pageSize,default=20" validate:"required,min=1,max=100" doc:"每页数量，1-100"`
		// 搜索关键词
		Keyword string `form:"keyword,optional" doc:"搜索关键词，可选"`
	}
	UserListResp {
		// 总数
		Total int64 `json:"total" doc:"总记录数"`
		// 用户列表
		List []UserInfo `json:"list" doc:"用户列表"`
	}
)

@server (
	prefix: /api/v1
)
service admin {
	@doc "发送邮箱验证码，用于注册验证"
	@handler sendVerifyCode
	post /auth/verify-code (SendVerifyCodeReq)

	@doc "使用邮箱验证码注册新用户"
	@handler register
	post /auth/register (RegisterReq) returns (CommonResp)

	@doc "使用用户名和密码登录系统"
	@handler login
	post /auth/login (LoginReq) returns (CommonResp)

	@doc "获取当前登录用户的详细信息"
	@handler getCurrentUser
	get /users/current returns (CommonResp)
}

@server (
	prefix:     /api/v1
	middleware: AuthMiddleware
)
service admin {
	@doc "管理员创建新用户，可以指定用户角色"
	@handler createUser
	post /users (CreateUserReq)

	@doc "更新指定用户的昵称、头像或角色"
	@handler updateUser
	put /users/:id (UpdateUserReq)

	@doc "分页获取用户列表，支持关键词搜索"
	@handler getUserList
	get /users (UserListReq) returns (CommonResp)

	@doc "删除指定用户（软删除）"
	@handler deleteUser
	delete /users/:id
}

